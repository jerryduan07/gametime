#!/usr/bin/env python

"""Exposes classes and functions to perform the lexical analysis of
the models generated by Z3, the SMT solver from Microsoft.
"""

"""See the LICENSE file, located in the root directory of
the source distribution and
at http://verifun.eecs.berkeley.edu/gametime/about/LICENSE,
for details on the GameTime license and authors.
"""


from gametime.smt.parsers.modelLexer import ModelLexer


class Z3ModelLexer(ModelLexer):
    """
    This class performs the lexical analysis of the models
    generated by Z3, the SMT solver from Microsoft.
    """
    def __init__(self):
        """Constructor for the Z3ModelLexer class."""
        super(Z3ModelLexer, self).__init__()

    # List of token names.
    tokens = ModelLexer.tokens + ("LPAREN", "RPAREN", "BANG", "EQUALS",
                                  "DEFINEFUN", "BOOL", "BITVEC",
                                  "ARRAY", "ASARRAY",
                                  "TRUE", "BINNUMBER", "HEXNUMBER")

    # Rules for the tokens.
    t_LPAREN = r"\("
    t_RPAREN = r"\)"
    t_BANG = r"!"
    t_EQUALS = r"="

    t_DEFINEFUN = r"define-fun"
    t_BOOL = r"Bool"
    t_BITVEC = r"BitVec"
    t_ARRAY = r"Array"
    t_ASARRAY = "as-array"

    t_TRUE = r"true"

    def t_BINNUMBER(self, t):
        r"\#b[01]+"
        t.value = int(t.value[2:], 2)
        return t

    def t_HEXNUMBER(self, t):
        r"\#x[\da-fA-F]+"
        t.value = int(t.value[2:], 16)
        return t
